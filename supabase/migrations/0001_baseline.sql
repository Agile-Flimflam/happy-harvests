create extension if not exists "citext" with schema "public" version '1.6';

create type "public"."bed_planting_status" as enum ('Planted', 'Harvested', 'Nursery');

create type "public"."crop_type" as enum ('Vegetable', 'Fruit', 'Windbreak', 'Covercrop');

create type "public"."planting_type" as enum ('Direct Seed', 'Transplant');

create table "public"."bed_plantings" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "crop_variety_id" bigint not null,
    "date_planted" date not null,
    "planting_type" planting_type not null,
    "qty_planting" smallint not null,
    "notes" text,
    "bed_id" bigint not null,
    "harvested_date" date,
    "status" bed_planting_status not null
);


create table "public"."beds" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "width_inches" smallint,
    "length_inches" smallint,
    "plot_id" bigint not null
);


create table "public"."crop_varieties" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text not null,
    "crop_id" bigint not null,
    "latin_name" text not null,
    "dtm_direct_seed_min" smallint not null,
    "dtm_direct_seed_max" smallint not null,
    "dtm_transplant_min" smallint not null,
    "dtm_transplant_max" smallint not null,
    "is_organic" boolean not null,
    "plant_spacing_min" smallint,
    "plant_spacing_max" smallint,
    "row_spacing_min" smallint,
    "row_spacing_max" smallint,
    "notes" text,
    "image_path" text
);


create table "public"."crops" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "crop_type" crop_type not null,
    "name" text not null
);


create table "public"."plots" (
    "plot_id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text not null
);


create table "public"."profiles" (
    "id" uuid not null,
    "display_name" text,
    "full_name" text,
    "avatar_url" text,
    "locale" text,
    "timezone" text,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "public"."profiles" enable row level security;

CREATE UNIQUE INDEX "Beds_pkey" ON public.beds USING btree (id);

CREATE UNIQUE INDEX "Crop Varieties_pkey" ON public.crop_varieties USING btree (id);

CREATE UNIQUE INDEX "Crops_pkey" ON public.crops USING btree (id);

CREATE UNIQUE INDEX "Plots_pkey" ON public.plots USING btree (plot_id);

CREATE UNIQUE INDEX bed_plantings_pkey ON public.bed_plantings USING btree (id);

CREATE UNIQUE INDEX profiles_pkey ON public.profiles USING btree (id);

alter table "public"."bed_plantings" add constraint "bed_plantings_pkey" PRIMARY KEY using index "bed_plantings_pkey";

alter table "public"."beds" add constraint "Beds_pkey" PRIMARY KEY using index "Beds_pkey";

alter table "public"."crop_varieties" add constraint "Crop Varieties_pkey" PRIMARY KEY using index "Crop Varieties_pkey";

alter table "public"."crops" add constraint "Crops_pkey" PRIMARY KEY using index "Crops_pkey";

alter table "public"."plots" add constraint "Plots_pkey" PRIMARY KEY using index "Plots_pkey";

alter table "public"."profiles" add constraint "profiles_pkey" PRIMARY KEY using index "profiles_pkey";

alter table "public"."bed_plantings" add constraint "Bed Plantings_bed_id_fkey" FOREIGN KEY (bed_id) REFERENCES beds(id) not valid;

alter table "public"."bed_plantings" validate constraint "Bed Plantings_bed_id_fkey";

alter table "public"."bed_plantings" add constraint "Bed Plantings_crop_variety_id_fkey" FOREIGN KEY (crop_variety_id) REFERENCES crop_varieties(id) not valid;

alter table "public"."bed_plantings" validate constraint "Bed Plantings_crop_variety_id_fkey";

alter table "public"."beds" add constraint "Bed_plot_id_fkey" FOREIGN KEY (plot_id) REFERENCES plots(plot_id) not valid;

alter table "public"."beds" validate constraint "Bed_plot_id_fkey";

alter table "public"."crop_varieties" add constraint "crop_varieties_crop_id_fkey" FOREIGN KEY (crop_id) REFERENCES crops(id) not valid;

alter table "public"."crop_varieties" validate constraint "crop_varieties_crop_id_fkey";

alter table "public"."profiles" add constraint "profiles_id_fkey" FOREIGN KEY (id) REFERENCES auth.users(id) ON DELETE CASCADE not valid;

alter table "public"."profiles" validate constraint "profiles_id_fkey";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.handle_new_user()
 RETURNS trigger
 LANGUAGE plpgsql
 SECURITY DEFINER
 SET search_path TO 'public'
AS $function$
begin
  insert into public.profiles (id, full_name, display_name, avatar_url, locale)
  values (
    new.id,
    coalesce(new.raw_user_meta_data->>'full_name', null),
    coalesce(new.raw_user_meta_data->>'display_name', new.raw_user_meta_data->>'full_name'),
    coalesce(new.raw_user_meta_data->>'avatar_url', null),
    coalesce(new.raw_user_meta_data->>'locale', null)
  )
  on conflict (id) do nothing;
  return new;
end;
$function$
;

create or replace view "public"."public_profiles" as  SELECT profiles.id,
    COALESCE(profiles.display_name, profiles.full_name) AS name,
    profiles.avatar_url
   FROM profiles;


CREATE OR REPLACE FUNCTION public.set_updated_at()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
begin
  new.updated_at = now();
  return new;
end;
$function$
;

grant delete on table "public"."bed_plantings" to "anon";

grant insert on table "public"."bed_plantings" to "anon";

grant references on table "public"."bed_plantings" to "anon";

grant select on table "public"."bed_plantings" to "anon";

grant trigger on table "public"."bed_plantings" to "anon";

grant truncate on table "public"."bed_plantings" to "anon";

grant update on table "public"."bed_plantings" to "anon";

grant delete on table "public"."bed_plantings" to "authenticated";

grant insert on table "public"."bed_plantings" to "authenticated";

grant references on table "public"."bed_plantings" to "authenticated";

grant select on table "public"."bed_plantings" to "authenticated";

grant trigger on table "public"."bed_plantings" to "authenticated";

grant truncate on table "public"."bed_plantings" to "authenticated";

grant update on table "public"."bed_plantings" to "authenticated";

grant delete on table "public"."bed_plantings" to "service_role";

grant insert on table "public"."bed_plantings" to "service_role";

grant references on table "public"."bed_plantings" to "service_role";

grant select on table "public"."bed_plantings" to "service_role";

grant trigger on table "public"."bed_plantings" to "service_role";

grant truncate on table "public"."bed_plantings" to "service_role";

grant update on table "public"."bed_plantings" to "service_role";

grant delete on table "public"."beds" to "anon";

grant insert on table "public"."beds" to "anon";

grant references on table "public"."beds" to "anon";

grant select on table "public"."beds" to "anon";

grant trigger on table "public"."beds" to "anon";

grant truncate on table "public"."beds" to "anon";

grant update on table "public"."beds" to "anon";

grant delete on table "public"."beds" to "authenticated";

grant insert on table "public"."beds" to "authenticated";

grant references on table "public"."beds" to "authenticated";

grant select on table "public"."beds" to "authenticated";

grant trigger on table "public"."beds" to "authenticated";

grant truncate on table "public"."beds" to "authenticated";

grant update on table "public"."beds" to "authenticated";

grant delete on table "public"."beds" to "service_role";

grant insert on table "public"."beds" to "service_role";

grant references on table "public"."beds" to "service_role";

grant select on table "public"."beds" to "service_role";

grant trigger on table "public"."beds" to "service_role";

grant truncate on table "public"."beds" to "service_role";

grant update on table "public"."beds" to "service_role";

grant delete on table "public"."crop_varieties" to "anon";

grant insert on table "public"."crop_varieties" to "anon";

grant references on table "public"."crop_varieties" to "anon";

grant select on table "public"."crop_varieties" to "anon";

grant trigger on table "public"."crop_varieties" to "anon";

grant truncate on table "public"."crop_varieties" to "anon";

grant update on table "public"."crop_varieties" to "anon";

grant delete on table "public"."crop_varieties" to "authenticated";

grant insert on table "public"."crop_varieties" to "authenticated";

grant references on table "public"."crop_varieties" to "authenticated";

grant select on table "public"."crop_varieties" to "authenticated";

grant trigger on table "public"."crop_varieties" to "authenticated";

grant truncate on table "public"."crop_varieties" to "authenticated";

grant update on table "public"."crop_varieties" to "authenticated";

grant delete on table "public"."crop_varieties" to "service_role";

grant insert on table "public"."crop_varieties" to "service_role";

grant references on table "public"."crop_varieties" to "service_role";

grant select on table "public"."crop_varieties" to "service_role";

grant trigger on table "public"."crop_varieties" to "service_role";

grant truncate on table "public"."crop_varieties" to "service_role";

grant update on table "public"."crop_varieties" to "service_role";

grant delete on table "public"."crops" to "anon";

grant insert on table "public"."crops" to "anon";

grant references on table "public"."crops" to "anon";

grant select on table "public"."crops" to "anon";

grant trigger on table "public"."crops" to "anon";

grant truncate on table "public"."crops" to "anon";

grant update on table "public"."crops" to "anon";

grant delete on table "public"."crops" to "authenticated";

grant insert on table "public"."crops" to "authenticated";

grant references on table "public"."crops" to "authenticated";

grant select on table "public"."crops" to "authenticated";

grant trigger on table "public"."crops" to "authenticated";

grant truncate on table "public"."crops" to "authenticated";

grant update on table "public"."crops" to "authenticated";

grant delete on table "public"."crops" to "service_role";

grant insert on table "public"."crops" to "service_role";

grant references on table "public"."crops" to "service_role";

grant select on table "public"."crops" to "service_role";

grant trigger on table "public"."crops" to "service_role";

grant truncate on table "public"."crops" to "service_role";

grant update on table "public"."crops" to "service_role";

grant delete on table "public"."plots" to "anon";

grant insert on table "public"."plots" to "anon";

grant references on table "public"."plots" to "anon";

grant select on table "public"."plots" to "anon";

grant trigger on table "public"."plots" to "anon";

grant truncate on table "public"."plots" to "anon";

grant update on table "public"."plots" to "anon";

grant delete on table "public"."plots" to "authenticated";

grant insert on table "public"."plots" to "authenticated";

grant references on table "public"."plots" to "authenticated";

grant select on table "public"."plots" to "authenticated";

grant trigger on table "public"."plots" to "authenticated";

grant truncate on table "public"."plots" to "authenticated";

grant update on table "public"."plots" to "authenticated";

grant delete on table "public"."plots" to "service_role";

grant insert on table "public"."plots" to "service_role";

grant references on table "public"."plots" to "service_role";

grant select on table "public"."plots" to "service_role";

grant trigger on table "public"."plots" to "service_role";

grant truncate on table "public"."plots" to "service_role";

grant update on table "public"."plots" to "service_role";

grant delete on table "public"."profiles" to "anon";

grant insert on table "public"."profiles" to "anon";

grant references on table "public"."profiles" to "anon";

grant select on table "public"."profiles" to "anon";

grant trigger on table "public"."profiles" to "anon";

grant truncate on table "public"."profiles" to "anon";

grant update on table "public"."profiles" to "anon";

grant delete on table "public"."profiles" to "authenticated";

grant insert on table "public"."profiles" to "authenticated";

grant references on table "public"."profiles" to "authenticated";

grant select on table "public"."profiles" to "authenticated";

grant trigger on table "public"."profiles" to "authenticated";

grant truncate on table "public"."profiles" to "authenticated";

grant update on table "public"."profiles" to "authenticated";

grant delete on table "public"."profiles" to "service_role";

grant insert on table "public"."profiles" to "service_role";

grant references on table "public"."profiles" to "service_role";

grant select on table "public"."profiles" to "service_role";

grant trigger on table "public"."profiles" to "service_role";

grant truncate on table "public"."profiles" to "service_role";

grant update on table "public"."profiles" to "service_role";

create policy "profiles: owner can insert"
on "public"."profiles"
as permissive
for insert
to authenticated
with check ((auth.uid() = id));


create policy "profiles: owner can select"
on "public"."profiles"
as permissive
for select
to public
using ((auth.uid() = id));


create policy "profiles: owner can update"
on "public"."profiles"
as permissive
for update
to public
using ((auth.uid() = id))
with check ((auth.uid() = id));


CREATE TRIGGER set_profiles_updated_at BEFORE UPDATE ON public.profiles FOR EACH ROW EXECUTE FUNCTION set_updated_at();



